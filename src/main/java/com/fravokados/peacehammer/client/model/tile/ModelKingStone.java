// Date: 08.07.2015 17:08:36
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX


package com.fravokados.peacehammer.client.model.tile;

import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

@SideOnly(Side.CLIENT)
public class ModelKingStone extends ModelBase {
	//fields
	ModelRenderer throneBase;
	ModelRenderer throneUpperBaseLeft;
	ModelRenderer throneStep;
	ModelRenderer throneUpperBaseRight;
	ModelRenderer throneUpperBaseBack;
	ModelRenderer back;
	ModelRenderer backRight;
	ModelRenderer backLeft;
	ModelRenderer right;
	ModelRenderer left;
	ModelRenderer seat;

	public ModelKingStone() {
		textureWidth = 64;
		textureHeight = 32;

		throneBase = new ModelRenderer(this, 0, 10);
		throneBase.addBox(0F, 0F, 0F, 16, 2, 16);
		throneBase.setRotationPoint(-8F, 22F, -8F);
		throneBase.setTextureSize(64, 32);
		throneBase.mirror = true;
		setRotation(throneBase, 0F, 0F, 0F);
		throneUpperBaseLeft = new ModelRenderer(this, 0, 11);
		throneUpperBaseLeft.addBox(0F, 0F, 0F, 5, 5, 16);
		throneUpperBaseLeft.setRotationPoint(3F, 17F, -8F);
		throneUpperBaseLeft.setTextureSize(64, 32);
		throneUpperBaseLeft.mirror = true;
		setRotation(throneUpperBaseLeft, 0F, 0F, 0F);
		throneStep = new ModelRenderer(this, 0, 0);
		throneStep.addBox(0F, 0F, 0F, 6, 3, 4);
		throneStep.setRotationPoint(-3F, 19F, -5F);
		throneStep.setTextureSize(64, 32);
		throneStep.mirror = true;
		setRotation(throneStep, 0F, 0F, 0F);
		throneUpperBaseRight = new ModelRenderer(this, 0, 11);
		throneUpperBaseRight.addBox(0F, 0F, 0F, 5, 5, 16);
		throneUpperBaseRight.setRotationPoint(-8F, 17F, -8F);
		throneUpperBaseRight.setTextureSize(64, 32);
		throneUpperBaseRight.mirror = true;
		setRotation(throneUpperBaseRight, 0F, 0F, 0F);
		throneUpperBaseBack = new ModelRenderer(this, 14, 14);
		throneUpperBaseBack.addBox(0F, 0F, 0F, 6, 5, 9);
		throneUpperBaseBack.setRotationPoint(-3F, 17F, -1F);
		throneUpperBaseBack.setTextureSize(64, 32);
		throneUpperBaseBack.mirror = true;
		setRotation(throneUpperBaseBack, 0F, 0F, 0F);
		back = new ModelRenderer(this, 44, 4);
		back.addBox(0F, 0F, 0F, 8, 16, 2);
		back.setRotationPoint(-4F, 1F, 5F);
		back.setTextureSize(64, 32);
		back.mirror = true;
		setRotation(back, 0F, 0F, 0F);
		backRight = new ModelRenderer(this, 54, 7);
		backRight.addBox(0F, 0F, 0F, 2, 7, 2);
		backRight.setRotationPoint(-6F, 3F, 5F);
		backRight.setTextureSize(64, 32);
		backRight.mirror = true;
		setRotation(backRight, 0F, 0F, 0F);
		backLeft = new ModelRenderer(this, 51, 7);
		backLeft.addBox(0F, 0F, 0F, 2, 7, 2);
		backLeft.setRotationPoint(4F, 3F, 5F);
		backLeft.setTextureSize(64, 32);
		backLeft.mirror = true;
		setRotation(backLeft, 0F, 0F, 0F);
		right = new ModelRenderer(this, 0, 12);
		right.addBox(0F, 0F, 0F, 3, 7, 8);
		right.setRotationPoint(-7F, 10F, -1F);
		right.setTextureSize(64, 32);
		right.mirror = true;
		setRotation(right, 0F, 0F, 0F);
		left = new ModelRenderer(this, 0, 12);
		left.addBox(0F, 0F, 0F, 3, 7, 8);
		left.setRotationPoint(4F, 10F, -1F);
		left.setTextureSize(64, 32);
		left.mirror = true;
		setRotation(left, 0F, 0F, 0F);
		seat = new ModelRenderer(this, 38, 22);
		seat.addBox(0F, 0F, 0F, 8, 5, 5);
		seat.setRotationPoint(-4F, 12F, 0F);
		seat.setTextureSize(64, 32);
		seat.mirror = true;
		setRotation(seat, 0F, 0F, 0F);
	}

	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		throneBase.render(f5);
		throneUpperBaseLeft.render(f5);
		throneStep.render(f5);
		throneUpperBaseRight.render(f5);
		throneUpperBaseBack.render(f5);
		back.render(f5);
		backRight.render(f5);
		backLeft.render(f5);
		right.render(f5);
		left.render(f5);
		seat.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}
}
